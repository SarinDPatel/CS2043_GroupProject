{"ast":null,"code":"import ProductModel from '../models/ProductModel';\nexport default class ProductService {\n  constructor(apiClient) {\n    this.apiClient = apiClient;\n  }\n  async getProducts() {\n    try {\n      const response = await this.apiClient.get('/products');\n      return response.data.map(product => new ProductModel(product.id, product.title, product.category, product.price, product.quantity, product.description));\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      return [];\n    }\n  }\n  async updateProduct(productId, productData) {\n    try {\n      const response = await this.apiClient.put(`/products/${productId}`, productData);\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating product ${productId}:`, error);\n      return false;\n    }\n  }\n  async deleteProduct(productId) {\n    try {\n      await this.apiClient.delete(`/products/${productId}`);\n      return true;\n    } catch (error) {\n      console.error(`Error deleting product ${productId}:`, error);\n      return false;\n    }\n  }\n  async createProduct(productData) {\n    try {\n      const response = await this.apiClient.post('/products', productData);\n      return new ProductModel(response.data.id, response.data.title, response.data.category, response.data.price, response.data.quantity, response.data.description);\n    } catch (error) {\n      console.error('Error creating product:', error);\n      return null;\n    }\n  }\n}","map":{"version":3,"names":["ProductModel","ProductService","constructor","apiClient","getProducts","response","get","data","map","product","id","title","category","price","quantity","description","error","console","updateProduct","productId","productData","put","deleteProduct","delete","createProduct","post"],"sources":["/Users/owengraham/Documents/CS2043_GroupProject/game-management-system/src/services/ProductService.js"],"sourcesContent":["import ProductModel from '../models/ProductModel';\n\nexport default class ProductService {\n    constructor(apiClient) {\n        this.apiClient = apiClient;\n    }\n\n    async getProducts() {\n        try {\n            const response = await this.apiClient.get('/products');\n            return response.data.map(product => new ProductModel(\n                product.id,\n                product.title,\n                product.category,\n                product.price,\n                product.quantity,\n                product.description\n            ));\n        } catch (error) {\n            console.error('Error fetching products:', error);\n            return [];\n        }\n    }\n\n    async updateProduct(productId, productData) {\n        try {\n            const response = await this.apiClient.put(`/products/${productId}`, productData);\n            return response.data;\n        } catch (error) {\n            console.error(`Error updating product ${productId}:`, error);\n            return false;\n        }\n    }\n\n    async deleteProduct(productId) {\n        try {\n            await this.apiClient.delete(`/products/${productId}`);\n            return true;\n        } catch (error) {\n            console.error(`Error deleting product ${productId}:`, error);\n            return false;\n        }\n    }\n\n    async createProduct(productData) {\n        try {\n            const response = await this.apiClient.post('/products', productData);\n            return new ProductModel(\n                response.data.id,\n                response.data.title,\n                response.data.category,\n                response.data.price,\n                response.data.quantity,\n                response.data.description\n            );\n        } catch (error) {\n            console.error('Error creating product:', error);\n            return null;\n        }\n    }\n}"],"mappings":"AAAA,OAAOA,YAAY,MAAM,wBAAwB;AAEjD,eAAe,MAAMC,cAAc,CAAC;EAChCC,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC9B;EAEA,MAAMC,WAAWA,CAAA,EAAG;IAChB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACF,SAAS,CAACG,GAAG,CAAC,WAAW,CAAC;MACtD,OAAOD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACC,OAAO,IAAI,IAAIT,YAAY,CAChDS,OAAO,CAACC,EAAE,EACVD,OAAO,CAACE,KAAK,EACbF,OAAO,CAACG,QAAQ,EAChBH,OAAO,CAACI,KAAK,EACbJ,OAAO,CAACK,QAAQ,EAChBL,OAAO,CAACM,WACZ,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,OAAO,EAAE;IACb;EACJ;EAEA,MAAME,aAAaA,CAACC,SAAS,EAAEC,WAAW,EAAE;IACxC,IAAI;MACA,MAAMf,QAAQ,GAAG,MAAM,IAAI,CAACF,SAAS,CAACkB,GAAG,CAAC,aAAaF,SAAS,EAAE,EAAEC,WAAW,CAAC;MAChF,OAAOf,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0BG,SAAS,GAAG,EAAEH,KAAK,CAAC;MAC5D,OAAO,KAAK;IAChB;EACJ;EAEA,MAAMM,aAAaA,CAACH,SAAS,EAAE;IAC3B,IAAI;MACA,MAAM,IAAI,CAAChB,SAAS,CAACoB,MAAM,CAAC,aAAaJ,SAAS,EAAE,CAAC;MACrD,OAAO,IAAI;IACf,CAAC,CAAC,OAAOH,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0BG,SAAS,GAAG,EAAEH,KAAK,CAAC;MAC5D,OAAO,KAAK;IAChB;EACJ;EAEA,MAAMQ,aAAaA,CAACJ,WAAW,EAAE;IAC7B,IAAI;MACA,MAAMf,QAAQ,GAAG,MAAM,IAAI,CAACF,SAAS,CAACsB,IAAI,CAAC,WAAW,EAAEL,WAAW,CAAC;MACpE,OAAO,IAAIpB,YAAY,CACnBK,QAAQ,CAACE,IAAI,CAACG,EAAE,EAChBL,QAAQ,CAACE,IAAI,CAACI,KAAK,EACnBN,QAAQ,CAACE,IAAI,CAACK,QAAQ,EACtBP,QAAQ,CAACE,IAAI,CAACM,KAAK,EACnBR,QAAQ,CAACE,IAAI,CAACO,QAAQ,EACtBT,QAAQ,CAACE,IAAI,CAACQ,WAClB,CAAC;IACL,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO,IAAI;IACf;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}