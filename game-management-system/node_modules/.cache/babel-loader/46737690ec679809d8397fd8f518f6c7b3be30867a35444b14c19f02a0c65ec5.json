{"ast":null,"code":"import { Product, Game, Merchandise } from '../models/ProductModel';\nimport apiClient from '../services/api';\nimport { createSlice } from '@reduxjs/toolkit';\n\n// Product reducer for Redux store\nconst initialState = {\n  products: [],\n  loading: false,\n  error: null\n};\nexport const productSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    startLoading: state => {\n      state.loading = true;\n    },\n    loadProductsSuccess: (state, action) => {\n      state.loading = false;\n      state.products = action.payload;\n      state.error = null;\n    },\n    loadProductsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  startLoading,\n  loadProductsSuccess,\n  loadProductsFailure\n} = productSlice.actions;\nexport const productReducer = productSlice.reducer;\nexport default class ProductService {\n  constructor(apiClient) {\n    this.apiClient = apiClient;\n  }\n  async getProducts() {\n    try {\n      const response = await this.apiClient.get('/products');\n      return response.data.map(product => {\n        if (product.category === 'game') {\n          return new Game(product.id, product.name, product.price, product.stock, product.console, product.warrantyAvailable);\n        } else if (product.category === 'merchandise') {\n          return new Merchandise(product.id, product.name, product.price, product.stock, product.type);\n        } else {\n          return new Product(product.id, product.name, product.price, product.stock, product.category);\n        }\n      });\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      return [];\n    }\n  }\n  async updateProduct(productId, productData) {\n    try {\n      const response = await this.apiClient.put(`/products/${productId}`, productData);\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating product ${productId}:`, error);\n      return false;\n    }\n  }\n  async deleteProduct(productId) {\n    try {\n      await this.apiClient.delete(`/products/${productId}`);\n      return true;\n    } catch (error) {\n      console.error(`Error deleting product ${productId}:`, error);\n      return false;\n    }\n  }\n  async createProduct(productData) {\n    try {\n      const response = await this.apiClient.post('/products', productData);\n      const data = response.data;\n      if (data.category === 'game') {\n        return new Game(data.id, data.name, data.price, data.stock, data.console, data.warrantyAvailable);\n      } else if (data.category === 'merchandise') {\n        return new Merchandise(data.id, data.name, data.price, data.stock, data.type);\n      } else {\n        return new Product(data.id, data.name, data.price, data.stock, data.category);\n      }\n    } catch (error) {\n      console.error('Error creating product:', error);\n      return null;\n    }\n  }\n}\n\n// Create and export an instance separately\nexport const productService = new ProductService(apiClient);","map":{"version":3,"names":["Product","Game","Merchandise","apiClient","createSlice","initialState","products","loading","error","productSlice","name","reducers","startLoading","state","loadProductsSuccess","action","payload","loadProductsFailure","actions","productReducer","reducer","ProductService","constructor","getProducts","response","get","data","map","product","category","id","price","stock","console","warrantyAvailable","type","updateProduct","productId","productData","put","deleteProduct","delete","createProduct","post","productService"],"sources":["/Users/owengraham/Documents/CS2043_GroupProject/game-management-system/src/services/ProductService.js"],"sourcesContent":["import { Product, Game, Merchandise } from '../models/ProductModel';\nimport apiClient from '../services/api';\nimport { createSlice } from '@reduxjs/toolkit';\n\n// Product reducer for Redux store\nconst initialState = {\n    products: [],\n    loading: false,\n    error: null\n};\n\nexport const productSlice = createSlice({\n    name: 'products',\n    initialState,\n    reducers: {\n        startLoading: (state) => {\n            state.loading = true;\n        },\n        loadProductsSuccess: (state, action) => {\n            state.loading = false;\n            state.products = action.payload;\n            state.error = null;\n        },\n        loadProductsFailure: (state, action) => {\n            state.loading = false;\n            state.error = action.payload;\n        }\n    }\n});\n\nexport const { startLoading, loadProductsSuccess, loadProductsFailure } = productSlice.actions;\nexport const productReducer = productSlice.reducer;\n\nexport default class ProductService {\n    constructor(apiClient) {\n        this.apiClient = apiClient;\n    }\n\n    async getProducts() {\n        try {\n            const response = await this.apiClient.get('/products');\n            return response.data.map(product => {\n                if (product.category === 'game') {\n                    return new Game(\n                        product.id,\n                        product.name,\n                        product.price,\n                        product.stock,\n                        product.console,\n                        product.warrantyAvailable\n                    );\n                } else if (product.category === 'merchandise') {\n                    return new Merchandise(\n                        product.id,\n                        product.name,\n                        product.price,\n                        product.stock,\n                        product.type\n                    );\n                } else {\n                    return new Product(\n                        product.id,\n                        product.name,\n                        product.price,\n                        product.stock,\n                        product.category\n                    );\n                }\n            });\n        } catch (error) {\n            console.error('Error fetching products:', error);\n            return [];\n        }\n    }\n\n    async updateProduct(productId, productData) {\n        try {\n            const response = await this.apiClient.put(`/products/${productId}`, productData);\n            return response.data;\n        } catch (error) {\n            console.error(`Error updating product ${productId}:`, error);\n            return false;\n        }\n    }\n\n    async deleteProduct(productId) {\n        try {\n            await this.apiClient.delete(`/products/${productId}`);\n            return true;\n        } catch (error) {\n            console.error(`Error deleting product ${productId}:`, error);\n            return false;\n        }\n    }\n\n    async createProduct(productData) {\n        try {\n            const response = await this.apiClient.post('/products', productData);\n            const data = response.data;\n            \n            if (data.category === 'game') {\n                return new Game(\n                    data.id,\n                    data.name,\n                    data.price,\n                    data.stock,\n                    data.console,\n                    data.warrantyAvailable\n                );\n            } else if (data.category === 'merchandise') {\n                return new Merchandise(\n                    data.id,\n                    data.name,\n                    data.price,\n                    data.stock,\n                    data.type\n                );\n            } else {\n                return new Product(\n                    data.id,\n                    data.name,\n                    data.price,\n                    data.stock,\n                    data.category\n                );\n            }\n        } catch (error) {\n            console.error('Error creating product:', error);\n            return null;\n        }\n    }\n}\n\n// Create and export an instance separately\nexport const productService = new ProductService(apiClient); \n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}